# Qualcomm MSM camera
type camera, domain;
type camera_exec, exec_type, file_type;

# Started by init
init_daemon_domain(camera)

# Interact with other media devices
allow camera camera_device:dir search;
allow camera { camera_device gpu_device video_device }:chr_file rw_file_perms;
allow camera { audioserver cameraserver surfaceflinger mediaserver }:fd use;
hal_client_domain(camera, hal_graphics_allocator)

allow camera hal_renderscript_hwservice:hwservice_manager find;

# Connect to sensor socket (/dev/sensor/sensor_ctl_socket)
unix_socket_connect(camera, sensors, sensors)
allow camera sensors_socket:sock_file read;

allow camera sensors_device:chr_file rw_file_perms;

allow camera self:capability { sys_nice };

# Create front and back camera sockets (/data/cam_socket[23])
# TODO: create these sockets elsewhere, apps shouldn't be putting sockets
# directly under /data.
type_transition camera system_data_file:sock_file camera_socket "cam_socket2";
type_transition camera system_data_file:sock_file camera_socket "cam_socket3";
allow camera camera_socket:sock_file { create unlink };
allow camera system_data_file:dir w_dir_perms;
allow camera system_data_file:sock_file unlink;

#for v4L node "name" access
allow camera sysfs_graphics:file rw_file_perms;
allow camera ion_device:chr_file rw_file_perms;

# TODO(b/34274385): Remove this once Camera HAL is guaranteed to not be run in passthrough mode
# What's going on here is that Camera HAL os talking over sockets to camera daemon, which is
# permitted. However, those rules target hal_camera rather than hal_camera_server and thus are also
# granted to all clients of Camera HAL (e.g., cameraserver) which are core components, and
# socket communications between system components and vendor components are not permted.
# Once we switch full Treble devices to binderized only mode, this issue will disappear.
typeattribute camera socket_between_core_and_vendor_violators;
